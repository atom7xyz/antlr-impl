// Link: https://web.unica.it/unica/protected/461075/0/def/ref/MAT461069/
//
// Esempio:
// x = 15
// y = 5
// z = 6
// output = 93
//
.constant
	OBJREF 0x40
	endline 0x3b
.end-constant

.main
	.var
		x
		y
		z
	.end-var

    LDC_W OBJREF
	INVOKEVIRTUAL input
	ISTORE x
	LDC_W OBJREF
	INVOKEVIRTUAL input
	ISTORE y
	LDC_W OBJREF
	INVOKEVIRTUAL input
	ISTORE z

	LDC_W OBJREF
		LDC_W OBJREF
		ILOAD z
		ILOAD y
		ILOAD x
		DUP
		IADD
		INVOKEVIRTUAL fun1
		LDC_W OBJREF
		ILOAD x
		BIPUSH 1
		ISUB
			LDC_W OBJREF
			ILOAD z
			ILOAD x
			ILOAD y
			INVOKEVIRTUAL fun1
		INVOKEVIRTUAL fun2
		IADD

	INVOKEVIRTUAL print
	HALT

.end-main

.method fun1(a,b,c)

	while:
	ILOAD b
	ILOAD a
	IADD
	ILOAD c
	ISUB
	IFLT continuo
	GOTO fine
	continuo:
	BIPUSH 8
	ILOAD a
	ISUB
	IFLT while
	LDC_W OBJREF
	BIPUSH 3
	ILOAD c
	INVOKEVIRTUAL mul
	ISTORE a
	BIPUSH 7
	ILOAD b
	ISUB
	IFLT while
	LDC_W OBJREF
	ILOAD c
	BIPUSH 2
	INVOKEVIRTUAL mod
	ISTORE b
	GOTO while

	fine:
	ILOAD a
	ILOAD b
	IADD
	BIPUSH 2
	ISUB
	IRETURN

.end-method

.method fun2(a,b)

	.var
		i
	.end-var

	BIPUSH 0
	ISTORE i

	for:
	BIPUSH 5
	ILOAD i
	ISUB
	DUP
	IFLT fine
	IFEQ fine
	BIPUSH 2
	ISTORE a
	while:
	ILOAD b
	LDC_W OBJREF
	ILOAD a
	BIPUSH 3
	INVOKEVIRTUAL div
	ISUB
	DUP
	IFLT incremento
	IFEQ incremento
	IINC a 2
	IINC b -1
	GOTO while
	incremento:
	IINC i 1
	GOTO for

	fine:
	LDC_W OBJREF
	ILOAD a
	BIPUSH 3
	INVOKEVIRTUAL mul
	BIPUSH 1
	ISUB
	IRETURN
.end-method





.method mul(i, j)
    ILOAD j
    IFEQ zero
    IINC j  -1
    ILOAD i
    IFEQ zero
    LDC_W OBJREF
    ILOAD i
    ILOAD j
    INVOKEVIRTUAL mul
    ILOAD i
	IADD
	GOTO fine
zero:
	BIPUSH 0x0
fine:
	IRETURN
.end-method


.method mod (a, b)
	ILOAD a
	IFEQ stop
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL mod
	GOTO fine
stop:
	ILOAD a
fine:
	IRETURN
.end-method

.method div (a, b)
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL div
	BIPUSH 1
	IADD
	GOTO fine
stop:
	BIPUSH 0x0
fine:
	IRETURN
.end-method

.method input()
	.var
		num
	.end-var

	BIPUSH 0x0
	ISTORE num

loop:
	IN
	DUP

	LDC_W ENDLINE
	ISUB
	IFEQ stop

	BIPUSH 0x30
	ISUB

	LDC_W OBJREF
	ILOAD num
	BIPUSH 10
	INVOKEVIRTUAL mul

	IADD
	ISTORE num
	GOTO loop

stop:
	ILOAD num
	IRETURN

.end-method


.method print(x)
	ILOAD x
	IFEQ printz

	LDC_W OBJREF
	ILOAD x
	INVOKEVIRTUAL print_digits
	GOTO end
printz:
	BIPUSH 0x30
	OUT
end:

	BIPUSH 0
	IRETURN
.end-method

.method print_digits(x)
	.var
		char
	.end-var

	ILOAD x
	IFEQ end

	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL mod

	BIPUSH 0x30
	IADD
	ISTORE char

	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL div

	LDC_W OBJREF
	SWAP
	INVOKEVIRTUAL print_digits

	ILOAD char
	OUT

end:
	BIPUSH 0
	IRETURN
.end-method