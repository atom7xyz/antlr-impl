// Link: https://web.unica.it/unica/protected/460218/0/def/ref/MAT460193/
//
// Esempio:
// x = 1
// y = 2
// z = 3
// output = 11
//
.constant
	OBJREF 0x40
	endline 0x3b
.end-constant

.main
    .var
        x
        y
        z
    .end-var

    LDC_W OBJREF
    INVOKEVIRTUAL input
    ISTORE x

    LDC_W OBJREF
    INVOKEVIRTUAL input
    ISTORE y

    LDC_W OBJREF
    INVOKEVIRTUAL input
    ISTORE z

    LDC_W OBJREF
	    LDC_W OBJREF
	    ILOAD x
	    ILOAD y
	    INVOKEVIRTUAL fun1

	    LDC_W OBJREF
	    ILOAD x
	    ILOAD y
		    LDC_W OBJREF
		    BIPUSH 2
		    ILOAD z
		    INVOKEVIRTUAL fun1
    	INVOKEVIRTUAL fun2
    	IADD
    INVOKEVIRTUAL print

    HALT
.end-main

.method fun1(a, b)
    .var
        i
    .end-var

    BIPUSH 6
    ISTORE i

    FOR:
        ILOAD i
        DUP
        IFEQ FINE-FOR
        IFLT FINE-FOR
        LDC_W OBJREF
        ILOAD a
        BIPUSH 2
        INVOKEVIRTUAL mod
        ILOAD a
        IADD
        ISTORE a
        ILOAD b
        ILOAD a
        IF_ICMPEQ ELSE
        IINC a -1
        IINC i -1
        GOTO FOR
        ELSE:
            IINC b 1
            IINC i -1
            GOTO FOR

    FINE-FOR:
    	ILOAD a
    	DUP
    	IADD
    	BIPUSH 14
    	IF_ICMPEQ IF-FINALE
        GOTO FINE

    IF-FINALE:
    	IINC b -1

    FINE:
    	ILOAD a
        ILOAD b
        IADD
        BIPUSH 1
        IADD
        IRETURN
.end-method

.method fun2(c,d,e)

    WHILE:
    	ILOAD c
        BIPUSH 4
        ISUB
        DUP
        IFLT CONTINUA
        IFEQ CONTINUA
        IINC c -1
        LDC_W OBJREF
        ILOAD c
        BIPUSH 3
        INVOKEVIRTUAL mod
        IFEQ THEN
        IINC d -1
        GOTO WHILE
        THEN:
        	IINC e 1
        	GOTO WHILE


    CONTINUA:
        ILOAD c
        ILOAD d
        BIPUSH 3
        IADD
        IADD
        IRETURN
.end-method

.method mul(i, j)
    ILOAD j
    IFEQ zero
    IINC j  -1
    ILOAD i
    IFEQ zero
    LDC_W OBJREF
    ILOAD i
    ILOAD j
    INVOKEVIRTUAL mul
    ILOAD i
	IADD
	GOTO fine
zero:
	BIPUSH 0x0
fine:
	IRETURN
.end-method


.method mod (a, b)
	ILOAD a
	IFEQ stop
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL mod
	GOTO fine
stop:
	ILOAD a
fine:
	IRETURN
.end-method

.method div (a, b)
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL div
	BIPUSH 1
	IADD
	GOTO fine
stop:
	BIPUSH 0x0
fine:
	IRETURN
.end-method

.method input()
	.var
		num
	.end-var

	BIPUSH 0x0
	ISTORE num

loop:
	IN
	DUP

	LDC_W ENDLINE
	ISUB
	IFEQ stop

	BIPUSH 0x30
	ISUB

	LDC_W OBJREF
	ILOAD num
	BIPUSH 10
	INVOKEVIRTUAL mul

	IADD
	ISTORE num
	GOTO loop

stop:
	ILOAD num
	IRETURN

.end-method


.method print(x)
	ILOAD x
	IFEQ printz

	LDC_W OBJREF
	ILOAD x
	INVOKEVIRTUAL print_digits
	GOTO end
printz:
	BIPUSH 0x30
	OUT
end:

	BIPUSH 0
	IRETURN
.end-method

.method print_digits(x)
	.var
		char
	.end-var

	ILOAD x
	IFEQ end

	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL mod

	BIPUSH 0x30
	IADD
	ISTORE char

	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL div

	LDC_W OBJREF
	SWAP
	INVOKEVIRTUAL print_digits

	ILOAD char
	OUT

end:
	BIPUSH 0
	IRETURN
.end-method