// Link: https://web.unica.it/unica/protected/292826/0/def/ref/MAT271841/
//
// Esempio:
// x = 1
// y = 2
// z = 3
// output = 2
//
.constant
	OBJREF 0x40
	endline 0x3b
.end-constant

.main
    .var
        a
        b
        c
    .end-var

    LDC_W OBJREF
    INVOKEVIRTUAL input
    ISTORE a

    LDC_W OBJREF
    INVOKEVIRTUAL input
    ISTORE b

    LDC_W OBJREF
    INVOKEVIRTUAL input
    ISTORE c

    LDC_W OBJREF
        LDC_W OBJREF
        ILOAD a
        ILOAD b
        INVOKEVIRTUAL fun1
        LDC_W OBJREF
        ILOAD a
        ILOAD b
        ILOAD c
        IADD
        INVOKEVIRTUAL fun2
        IADD
    INVOKEVIRTUAL print

    HALT
.end-main

.method fun1(a, b)
    LDC_W OBJREF
    ILOAD a
    BIPUSH 3
    INVOKEVIRTUAL mod
    BIPUSH 2
    IF_ICMPEQ if

    while:
        ILOAD a
        BIPUSH 3
        IADD
        ILOAD b
        ISUB
        DUP
        IFEQ end-while
        IFLT end-while

        IINC a -1

        GOTO while

    GOTO end-if

    if:
        ILOAD a
        LDC_W OBJREF
        ILOAD b
        BIPUSH 2
        INVOKEVIRTUAL div
        ISUB
        IFLT end-if

        ILOAD b
        BIPUSH 3
        IADD
        ISTORE b
    end-if:
    end-while:

    ILOAD a
    ILOAD b
    IADD
    IRETURN
.end-method

.method fun2(x, y)
    while:
        ILOAD y
        ILOAD x
        ISUB
        DUP
        IFLT end-while
        IFEQ end-while

        IINC y -1

        GOTO while
    end-while:

    ILOAD x
    BIPUSH 5
    ISUB
    DUP
    IFEQ end-if
    IFLT end-if


    LDC_W OBJREF
    LDC_W OBJREF
    ILOAD x
    ILOAD y
    BIPUSH 1
    IADD
    INVOKEVIRTUAL div
    ILOAD y
    INVOKEVIRTUAL fun2
    IRETURN

    end-if:

    ILOAD x
    IRETURN
.end-method

.method mul(i, j)
    ILOAD j
    IFEQ zero
    IINC j  -1
    ILOAD i
    IFEQ zero
    LDC_W OBJREF
    ILOAD i
    ILOAD j
    INVOKEVIRTUAL mul
    ILOAD i
	IADD
	GOTO fine
zero:
	BIPUSH 0x0
fine:
	IRETURN
.end-method

.method mod (a, b)
	ILOAD a
	IFEQ stop
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL mod
	GOTO fine
stop:
	ILOAD a
fine:
	IRETURN
.end-method

.method div (a, b)
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL div
	BIPUSH 1
	IADD
	GOTO fine
stop:
	BIPUSH 0x0
fine:
	IRETURN
.end-method

.method input()
	.var
		num
	.end-var

	BIPUSH 0x0
	ISTORE num

loop:
	IN
	DUP

	LDC_W ENDLINE
	ISUB
	IFEQ stop

	BIPUSH 0x30
	ISUB

	LDC_W OBJREF
	ILOAD num
	BIPUSH 10
	INVOKEVIRTUAL mul

	IADD
	ISTORE num
	GOTO loop

stop:
	ILOAD num
	IRETURN

.end-method


.method print(x)
	ILOAD x
	IFEQ printz

	LDC_W OBJREF
	ILOAD x
	INVOKEVIRTUAL print_digits
	GOTO end
printz:
	BIPUSH 0x30
	OUT
end:

	BIPUSH 0
	IRETURN
.end-method

.method print_digits(x)
	.var
		char
	.end-var

	ILOAD x
	IFEQ end

	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL mod

	BIPUSH 0x30
	IADD
	ISTORE char

	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL div

	LDC_W OBJREF
	SWAP
	INVOKEVIRTUAL print_digits

	ILOAD char
	OUT

end:
	BIPUSH 0
	IRETURN
.end-method